#!/usr/bin/env ruby
# coding: utf-8
require "json"
require "pp"
require "shellwords"

def downloads_json
  filename = Dir.glob("#{ENV['HOME']}/.mozilla/firefox/*/downloads.json").first
  if !filename
    puts "No downloads in progress"
    exit
  end
  json = File.read(filename)
  JSON.parse(json)
end

def download(d)
  url = d["source"]
  url = url["url"] if url.is_a? Hash

  part_file = d["target"]["partFilePath"]
  file = d["target"]["path"]
  canceled = d["canceled"] || d["error"]
  if !canceled
    puts "NOT paused in Firefox: #{file}"
    return
  end

  wget(url, part_file, file)
end

def wget(url, partial_fn, final_fn)
  command = ["wget", "--read-timeout=60", "--no-use-server-timestamps", "--continue", "--output-document", partial_fn, url]
  puts command.map(&:shellescape).join(" ")
  result = system(*command)
  if result
    system "mv", partial_fn, final_fn
  else
    puts "Failed"
    pp result
    pp $?
  end
end

def download_by_url(url)
  out = `curl -f -L -I #{url.shellescape}`
  return if out.empty?
  puts
  fn = nil
  out.lines.each do |l|
    match = (l =~ /^Content-Disposition: attachment; filename\*=UTF-8''(.*)/)
    next if match.nil?
    fn = URI.decode($1.chomp)
    break
  end
  final_fn = ENV["HOME"] + "/Stažené/" + fn
  partial_fn = final_fn + ".part"
  p final_fn
  p partial_fn
  p File.stat partial_fn
  wget(url, partial_fn, final_fn)
end

def interruptible(is_last: false, &block)
  begin
    block.call
  rescue Interrupt
    puts "\nInterrupt"
    return if is_last

    puts "(sleeping 2s before proceeding with next file)"
    sleep 2
  end
rescue Interrupt
  puts "\nExiting"
  exit
end

if ARGV[0] == "-u"
  download_by_url ARGV[1]
else
  downloads = downloads_json["list"]

  downloads_count = downloads.count
  downloads.each_with_index do |item, i|
    interruptible(is_last: i + 1 == downloads_count) do
      download item
    end
  end
end
